
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';
import { PostgrestQueryBuilder } from '@supabase/postgrest-js';

const SUPABASE_URL = "https://dcczwfzdvnmqiuikjrlk.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImRjY3p3Znpkdm5tcWl1aWtqcmxrIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDI2MDU5MjUsImV4cCI6MjA1ODE4MTkyNX0.7-3KpL4OIioHBQ8cmY5kSiJ924PsK7yenVVm4Jk0Two";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  {
    realtime: {
      params: {
        eventsPerSecond: 10
      }
    }
  }
);

// Create a type-safe helper for table access
// This will help with TypeScript errors by providing proper typing
export type TablesInsert<T extends keyof Database['public']['Tables']> = 
  Database['public']['Tables'][T]['Insert'];

export type TablesRow<T extends keyof Database['public']['Tables']> = 
  Database['public']['Tables'][T]['Row'];

// Add custom type for User from Supabase Auth
export type UserWithCustomAttributes = {
  id: string;
  email?: string | null;
  phone?: string | null;
  app_metadata: {
    provider?: string;
    [key: string]: any;
  };
  user_metadata: {
    name?: string;
    first_name?: string;
    last_name?: string;
    avatar_url?: string;
    [key: string]: any;
  };
  aud: string;
  displayName?: string;
  uid?: string; // Compatibility with Firebase API
};
